//1、找出1-100有多少个9
//#include <stdio.h>
//int main()
//{
//	int i,num=0;
//	for (i=0;i<100;i++)
//	{
//if (i/10==9)
//{
//num ++;
//}
//else if(i%10==9)
//{
//num ++;
//}
//	}
//printf("%d \n",num);
//return 0;
//}
//2、计算1/1-1/2+1/3-1/4+1/5 …… + 1/99 - 1/100 的值
//要利用(-1)的i次方来进行“+”“-”号的控制。再将循环变量i当作分母。
//因为这里的计算结果会以小数表示，所以并不能用int整型来定义变量。
//#include <stdio.h>
//#include <math.h>
//int main()
//{
//int i;
//float sum=0.0,temp=0.0;
//for (i=0;i<100;i++)
//{
//	temp = pow (-1,i+1);
//	sum=sum+temp*1/i;
//}
//printf("sum is %f \n",sum);
//return 0;
////}有问题的代码！！！！！！！问题很大
//#include <stdio.h>//拆分法
//int main()
//{
//int i=0,j=0;
//double sum =1.0,sum1=0.0,sum2=0.0;
//for (i=1;i<99;i=i+2)
//{
//sum1=sum1+1.0/i;//分母为奇数项之和
//}
//for (j=2;j<100;j=j+2)
//{
//	sum2=sum2+1.0/j;//分母为偶数项之和
//}
//sum=sum1-sum2;
//printf("%f\n",sum);
//return 0;
//}
//#include <stdio.h>
//int main()
//{
//	int i=0;
//	int sign=1;
//	double sum=1.0;
//	for (i=2;i<100;i++)
//	{
//	sign=-sign;
//	sum=sum+sign*1.0/i;//注意1.0错误输出会导致强制类型转换
//	}
//	printf("%lf \n",sum);
//return 0;
//}
//#include <stdio.h>
//int main()
//{
//	int sign=1;
//	double sum=1.0;
//	double deno=2.0;
//	while (deno<=100)
//	{
//		sign=-sign;
//		sum =sum+sign*1.0/deno;
//		deno++;
//	}
//	printf("%lf \n",sum);
//	return 0;
//}
//数组交换的三种方法
//#include <stdio.h>
//int main()
//{
//int arr1[] = { 1, 3, 5, 7, 9 };
//int arr2[] = { 3, 4, 5, 6 ,7 };
//int tmp;
//int i = 0;
//for (i = 0; i < sizeof(arr1) / sizeof(arr1[0]); i++)
//{
//tmp = arr1[i];
//arr1[i] = arr2[i];
//arr2[i] = tmp;
//}
//for (i = 0; i < sizeof(arr1) / sizeof(arr1[0]); i++)
//  {
//printf("%d ", arr1[i]);
//   }
//    printf("\n");
//for (i = 0; i < sizeof(arr1) / sizeof(arr1[0]); i++)
//{
//printf("%d ", arr2[i]);
//}
//   printf("\n");
//return 0;
//}
//#include <stdio.h>
//int main()
//{
//	int arr1[]={1,2,3,4,5};
//	int arr2[]={6,7,8,9,10};
//	int arr3[]={0,0,0,0,0};
//	int sz=sizeof(arr1)/sizeof(arr1[0]);
//	int i=0;
//	for (i=0;i<sz;i++)
//	{
//		arr3[i]=arr1[i];
//		arr1[i]=arr2[i];
//		arr2[i]=arr3[i];
//	}
//	for (i=0;i<sz;i++)
//	{
//		printf("%-2d",arr1[i]);
//	}
//		printf("\n");
//	for (i=0;i<sz;i++)
//	{
//		printf("%-2d",arr2[i]);
//	}
//	printf("\n");
//	return 0;
//}
